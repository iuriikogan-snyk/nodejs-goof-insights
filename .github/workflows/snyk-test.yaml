name: Snyk Test

on:
  workflow_dispatch:
  pull_request:
    branches: main
  push: 
    branches: main
env:
  IMAGE_TAG: nodejs-goof:linux-arm64
  PLATFORM: linux/arm64
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
jobs:
  build:
    name: Snyk Scan 
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Interpolate REPO_NAME var and set to github env # Unable to pass to env or jobs.id.env etc due to limitations on $GITHUB_REPOSITORY VAR
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV
    
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Build project
        run: npm install --legacy-peer-deps
  
      - name: Setup Snyk + snyk-filter # For information about the required commands https://docs.snyk.io/scm-ide-and-ci-cd-integrations/snyk-ci-cd-integrations
        run: |
          npm install snyk snyk-filter -g
          snyk auth ${{ env.SNYK_TOKEN }}

      - name: Snyk Open Source
        run: |
          snyk monitor --all-projects --tags="component=pkg:${{ github.repository }}@${{ github.ref_name }}" \
          --org=${{ secrets.SNYK_ORG_ID }} --project-name=${{ github.repository.name }} \
          --remote-repo-url=${{ github.repository }} --target-reference=${{ env.REPO_NAME }}
        # snyk-filter --json --print-deps | snyk-delta --setPassIfNoBaseline false
        # run: snyk test--org=XXX ---project-name=XXX - Use snyk test command to recieve issues info to the Pipeline
        continue-on-error: true

      - name: Snyk Code
        run: snyk code test
        continue-on-error: true
        
      - name: Snyk Container Test
        run: |
          docker build -f ./Dockerfile . \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TAG }} --platform=${{ env.PLATFORM }}
          snyk container test ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TAG }} --file=Dockerfile \
          --exclude-app-vulns --platform=${{ env.PLATFORM }}
        # Rename your image, for uploading directly to your snyk org please use the command "snyk container monitor $container_name/$tag --org=$ORG_ID"
        continue-on-error: true
      
      - name: Snyk IaC
        run: snyk iac test
        continue-on-error: true

      - name: Snyk Container Monitor
        run: |
          snyk container monitor "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TAG }}" \
          --file=Dockerfile --exclude-app-vulns --platform=${{ env.PLATFORM }} \
          --tags="component=pkg:${{ github.repository }}@${{ github.ref_name }}" \
          --org=${{ secrets.SNYK_ORG_ID }} --project-name=${{ env.REPO_NAME }} \
          --remote-repo-url=${{ github.repository }} --target-reference=${{ env.REPO_NAME }}
        continue-on-error: true

      - name: Snyk SBOM generate
        run: |
          snyk container sbom --format=spdx2.3+json --name="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TAG }}" \
          --file=Dockerfile --platform=${{ env.PLATFORM }} > bom.spdx.json
        continue-on-error: true

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.5
        with:
          name: snyk SBOM
          path: bom.spdx.json
