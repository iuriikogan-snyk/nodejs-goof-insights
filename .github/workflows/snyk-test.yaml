name: Snyk Test

on:
  workflow_dispatch:
  pull_request:
    branches: main
  push: 
    branches: main
env:
  IMAGE_TAG: nodejs-goof:linux-arm64
  PLATFORM: linux/arm64
  
jobs:
  build:
    name: Snyk Scan 
    runs-on: ubuntu-latest

    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
      
      - name: Build project
        run: npm install --legacy-peer-deps
  
      - name: Setup Snyk + snyk-filter # For information about the required commands https://docs.snyk.io/scm-ide-and-ci-cd-integrations/snyk-ci-cd-integrations
        run: |
          npm install snyk snyk-filter -g
          snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Open Source
        run: |
          snyk monitor --file=./package.json --tags="component=pkg:${{ github.repository }}@${{ github.ref_name }}" \
          --org=${{ secrets.SNYK_ORG_ID }} --project-name=${{ env.REPO_NAME }} \
          --remote-repo-url=${{ github.repository }} --target-reference=${{ github.repository }}
        # snyk test --json --print-deps | snyk-delta --setPassIfNoBaseline false ## you can use snyk-delta to diff between previous snapshots for the same project
        # snyk test --json | snyk-filter ## you can edit the .snyk-filter/snyk.yaml file in order to apply additional filters
        # run: snyk test--org=XXX ---project-name=XXX - Use snyk test command to recieve issues info to the Pipeline
        continue-on-error: true

      - name: Checkout .snyk file from private repo 
        uses: actions/checkout@v4
        with:
          repository: iuriikogan-snyk/snyk-policy-master
          path: 'snyk'
          token: ${{ secrets.SNYK_REPO_TOKEN }}
      
      - name: Snyk Code
        run: |
          cp -r ./snyk .
          echo $(cat snyk_sha) | sha256sum -c -
          snyk code test
        continue-on-error: true
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Snyk Container Test
      
        run: |
          docker build -f ./Dockerfile . \
          --tag ${{ github.repository_owner }}/${{ env.IMAGE_TAG }} --platform=${{ env.PLATFORM }}
          
          snyk container test ${{ github.repository_owner }}/${{ env.IMAGE_TAG }} --file=Dockerfile \
          --exclude-app-vulns --platform=${{ env.PLATFORM }}
          
        # Rename your image, for uploading directly to your snyk org please use the command "snyk container monitor $container_name/$tag --org=$ORG_ID"
        continue-on-error: true
      
      - name: Snyk IaC
        run: snyk iac test --org=${{ secrets.SNYK_ORG_ID }}
        continue-on-error: true

      - name: Snyk Container Monitor
        run: |
          snyk container monitor "${{ github.repository_owner }}/${{ env.IMAGE_TAG}}" \
          --file=Dockerfile --exclude-app-vulns --platform=${{ env.PLATFORM }} \
          --tags="component=pkg:${{ github.repository }}@${{ github.ref_name }}" \
          --org=${{ secrets.SNYK_ORG_ID }} --project-name="${{ github.repository_owner }}/${{ env.IMAGE_TAG}}" \
          --target-reference=${{ github.repository }}
        continue-on-error: true

      # - name: Snyk SBOM generate
      #   run: |
      #     snyk container sbom --format=spdx2.3+json --org=${{ secrets.SNYK_ORG_ID }} \
      #     ${{ github.repository_owner }}/${{ env.IMAGE_TAG}}
      #   continue-on-error: true

      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v4.3.5
      #   with:
      #     name: snyk SBOM
      #     path: bom.spdx.json
